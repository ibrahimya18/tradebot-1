{"ast":null,"code":"export const getPriceHistory = async () => {\n  try {\n    const response = await axios.get('https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1m&limit=100');\n    return response.data.map(k => parseFloat(k[4])); // Kapanış fiyatları\n  } catch (error) {\n    console.error('Error fetching price history:', error);\n    // Fallback data\n    return Array(100).fill(0).map((_, i) => 0.15 + Math.random() * 0.01);\n  }\n};","map":{"version":3,"names":["getPriceHistory","response","axios","get","data","map","k","parseFloat","error","console","Array","fill","_","i","Math","random"],"sources":["C:/Users/VESTEL/Documents/GitHub/tradebot/src/services/api.jsx"],"sourcesContent":["export const getPriceHistory = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      'https://api.binance.com/api/v3/klines?symbol=DOGEUSDT&interval=1m&limit=100'\r\n    );\r\n    return response.data.map(k => parseFloat(k[4])); // Kapanış fiyatları\r\n  } catch (error) {\r\n    console.error('Error fetching price history:', error);\r\n    // Fallback data\r\n    return Array(100).fill(0).map((_, i) => 0.15 + (Math.random() * 0.01));\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAC9B,6EACF,CAAC;IACD,OAAOF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD;IACA,OAAOE,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACN,GAAG,CAAC,CAACO,CAAC,EAAEC,CAAC,KAAK,IAAI,GAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAK,CAAC;EACxE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}