{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getBalance, getPriceHistory, placeOrder as apiPlaceOrder } from '../services/api';\nexport const useBinance = () => {\n  _s();\n  const [balance, setBalance] = useState(null);\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [priceHistory, setPriceHistory] = useState([]);\n  const [openOrders, setOpenOrders] = useState([]);\n  const [orderHistory, setOrderHistory] = useState([]);\n  const [leverage, setLeverageState] = useState(10);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const connectWallet = async (apiKey, secretKey) => {\n    try {\n      // Önce cüzdan bağlantısını kontrol edelim\n      const bal = await getBalance(apiKey, secretKey);\n      setBalance(bal);\n      setConnectionStatus('connecting');\n\n      // WebSocket bağlantısını oluşturalım\n      const ws = new WebSocket('wss://stream.binance.com:9443/ws/dogeusdt@ticker');\n      ws.onopen = () => {\n        setConnectionStatus('connected');\n        console.log('WebSocket connected');\n      };\n      ws.onmessage = event => {\n        const data = JSON.parse(event.data);\n        const newPrice = parseFloat(data.c);\n        setCurrentPrice(newPrice);\n        setPriceHistory(prev => [...prev.slice(-99), newPrice]);\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n        setConnectionStatus('error');\n      };\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        setConnectionStatus('disconnected');\n      };\n\n      // Fiyat geçmişini yükle\n      const history = await getPriceHistory();\n      setPriceHistory(history.map(item => parseFloat(item)));\n      return true;\n    } catch (error) {\n      console.error('Connection failed:', error);\n      setConnectionStatus('error');\n      return false;\n    }\n  };\n\n  // ... diğer fonksiyonlar aynı kalacak\n};\n_s(useBinance, \"v/yjyE2uS28teeYfMkUO1jejeyI=\");","map":{"version":3,"names":["useState","useEffect","getBalance","getPriceHistory","placeOrder","apiPlaceOrder","useBinance","_s","balance","setBalance","currentPrice","setCurrentPrice","priceHistory","setPriceHistory","openOrders","setOpenOrders","orderHistory","setOrderHistory","leverage","setLeverageState","connectionStatus","setConnectionStatus","connectWallet","apiKey","secretKey","bal","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","newPrice","parseFloat","c","prev","slice","onerror","error","onclose","history","map","item"],"sources":["C:/Users/VESTEL/Documents/GitHub/tradebot/src/hooks/useBinance.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getBalance, getPriceHistory, placeOrder as apiPlaceOrder } from '../services/api';\r\n\r\nexport const useBinance = () => {\r\n  const [balance, setBalance] = useState(null);\r\n  const [currentPrice, setCurrentPrice] = useState(0);\r\n  const [priceHistory, setPriceHistory] = useState([]);\r\n  const [openOrders, setOpenOrders] = useState([]);\r\n  const [orderHistory, setOrderHistory] = useState([]);\r\n  const [leverage, setLeverageState] = useState(10);\r\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n\r\n  const connectWallet = async (apiKey, secretKey) => {\r\n    try {\r\n      // Önce cüzdan bağlantısını kontrol edelim\r\n      const bal = await getBalance(apiKey, secretKey);\r\n      setBalance(bal);\r\n      setConnectionStatus('connecting');\r\n\r\n      // WebSocket bağlantısını oluşturalım\r\n      const ws = new WebSocket('wss://stream.binance.com:9443/ws/dogeusdt@ticker');\r\n\r\n      ws.onopen = () => {\r\n        setConnectionStatus('connected');\r\n        console.log('WebSocket connected');\r\n      };\r\n\r\n      ws.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        const newPrice = parseFloat(data.c);\r\n        setCurrentPrice(newPrice);\r\n        setPriceHistory(prev => [...prev.slice(-99), newPrice]);\r\n      };\r\n\r\n      ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        setConnectionStatus('error');\r\n      };\r\n\r\n      ws.onclose = () => {\r\n        console.log('WebSocket disconnected');\r\n        setConnectionStatus('disconnected');\r\n      };\r\n\r\n      // Fiyat geçmişini yükle\r\n      const history = await getPriceHistory();\r\n      setPriceHistory(history.map(item => parseFloat(item)));\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Connection failed:', error);\r\n      setConnectionStatus('error');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // ... diğer fonksiyonlar aynı kalacak\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,eAAe,EAAEC,UAAU,IAAIC,aAAa,QAAQ,iBAAiB;AAE1F,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,QAAQ,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC,cAAc,CAAC;EAExE,MAAMsB,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;IACjD,IAAI;MACF;MACA,MAAMC,GAAG,GAAG,MAAMvB,UAAU,CAACqB,MAAM,EAAEC,SAAS,CAAC;MAC/Cf,UAAU,CAACgB,GAAG,CAAC;MACfJ,mBAAmB,CAAC,YAAY,CAAC;;MAEjC;MACA,MAAMK,EAAE,GAAG,IAAIC,SAAS,CAAC,kDAAkD,CAAC;MAE5ED,EAAE,CAACE,MAAM,GAAG,MAAM;QAChBP,mBAAmB,CAAC,WAAW,CAAC;QAChCQ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACpC,CAAC;MAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;QACxB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;QACnC,MAAMG,QAAQ,GAAGC,UAAU,CAACJ,IAAI,CAACK,CAAC,CAAC;QACnC3B,eAAe,CAACyB,QAAQ,CAAC;QACzBvB,eAAe,CAAC0B,IAAI,IAAI,CAAC,GAAGA,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAEJ,QAAQ,CAAC,CAAC;MACzD,CAAC;MAEDV,EAAE,CAACe,OAAO,GAAIC,KAAK,IAAK;QACtBb,OAAO,CAACa,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxCrB,mBAAmB,CAAC,OAAO,CAAC;MAC9B,CAAC;MAEDK,EAAE,CAACiB,OAAO,GAAG,MAAM;QACjBd,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCT,mBAAmB,CAAC,cAAc,CAAC;MACrC,CAAC;;MAED;MACA,MAAMuB,OAAO,GAAG,MAAMzC,eAAe,CAAC,CAAC;MACvCU,eAAe,CAAC+B,OAAO,CAACC,GAAG,CAACC,IAAI,IAAIT,UAAU,CAACS,IAAI,CAAC,CAAC,CAAC;MAEtD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CrB,mBAAmB,CAAC,OAAO,CAAC;MAC5B,OAAO,KAAK;IACd;EACF,CAAC;;EAED;AACF,CAAC;AAACd,EAAA,CAtDWD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}