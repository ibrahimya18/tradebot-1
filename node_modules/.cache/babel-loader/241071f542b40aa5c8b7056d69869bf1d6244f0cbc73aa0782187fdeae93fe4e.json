{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getBalance, getPriceHistory, placeOrder as apiPlaceOrder } from '../services/api';\nimport { meanReversion, breakout } from '../services/tradingAlgorithms';\nexport const useBinance = () => {\n  _s();\n  const [balance, setBalance] = useState(null);\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [priceHistory, setPriceHistory] = useState([]);\n  const [openOrders, setOpenOrders] = useState([]);\n  const [orderHistory, setOrderHistory] = useState([]);\n  const [leverage, setLeverage] = useState(10);\n  const [ws, setWs] = useState(null);\n  const connectWallet = async (apiKey, secretKey) => {\n    try {\n      const bal = await getBalance(apiKey, secretKey);\n      setBalance(bal);\n\n      // WebSocket bağlantısını başlat\n      const websocket = new WebSocket(`wss://stream.binance.com:9443/ws/dogeusdt@ticker`);\n      websocket.onmessage = event => {\n        const data = JSON.parse(event.data);\n        setCurrentPrice(parseFloat(data.c));\n        setPriceHistory(prev => [...prev.slice(-99), parseFloat(data.c)]);\n      };\n      setWs(websocket);\n\n      // Fiyat geçmişini yükle\n      const history = await getPriceHistory();\n      setPriceHistory(history);\n      return true;\n    } catch (error) {\n      console.error('Wallet connection failed:', error);\n      return false;\n    }\n  };\n  const placeOrder = async (side, amount, price) => {\n    try {\n      const order = {\n        symbol: 'DOGEUSDT',\n        side,\n        amount,\n        price,\n        leverage,\n        timestamp: Date.now(),\n        status: 'open'\n      };\n\n      // API'ye gönder\n      await apiPlaceOrder(order);\n      setOpenOrders(prev => [...prev, order]);\n      return order;\n    } catch (error) {\n      console.error('Order failed:', error);\n      return null;\n    }\n  };\n  const applyAlgorithm = algorithmName => {\n    const priceData = [...priceHistory, currentPrice];\n    switch (algorithmName) {\n      case 'meanReversion':\n        return meanReversion(priceData);\n      case 'breakout':\n        return breakout(priceData);\n      default:\n        return {\n          action: 'hold',\n          price: currentPrice\n        };\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [ws]);\n  return {\n    balance,\n    currentPrice,\n    priceHistory,\n    openOrders,\n    orderHistory,\n    connectWallet,\n    placeOrder,\n    setLeverage,\n    applyAlgorithm\n  };\n};\n_s(useBinance, \"wBJxaoekHh0sEOWZlLfLC1a0YHU=\");","map":{"version":3,"names":["useState","useEffect","getBalance","getPriceHistory","placeOrder","apiPlaceOrder","meanReversion","breakout","useBinance","_s","balance","setBalance","currentPrice","setCurrentPrice","priceHistory","setPriceHistory","openOrders","setOpenOrders","orderHistory","setOrderHistory","leverage","setLeverage","ws","setWs","connectWallet","apiKey","secretKey","bal","websocket","WebSocket","onmessage","event","data","JSON","parse","parseFloat","c","prev","slice","history","error","console","side","amount","price","order","symbol","timestamp","Date","now","status","applyAlgorithm","algorithmName","priceData","action","close"],"sources":["C:/Users/VESTEL/Documents/GitHub/tradebot/src/hooks/useMexc.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getBalance, getPriceHistory, placeOrder as apiPlaceOrder } from '../services/api';\r\nimport { meanReversion, breakout } from '../services/tradingAlgorithms';\r\n\r\nexport const useBinance = () => {\r\n  const [balance, setBalance] = useState(null);\r\n  const [currentPrice, setCurrentPrice] = useState(0);\r\n  const [priceHistory, setPriceHistory] = useState([]);\r\n  const [openOrders, setOpenOrders] = useState([]);\r\n  const [orderHistory, setOrderHistory] = useState([]);\r\n  const [leverage, setLeverage] = useState(10);\r\n  const [ws, setWs] = useState(null);\r\n\r\n  const connectWallet = async (apiKey, secretKey) => {\r\n    try {\r\n      const bal = await getBalance(apiKey, secretKey);\r\n      setBalance(bal);\r\n      \r\n      // WebSocket bağlantısını başlat\r\n      const websocket = new WebSocket(`wss://stream.binance.com:9443/ws/dogeusdt@ticker`);\r\n      \r\n      websocket.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        setCurrentPrice(parseFloat(data.c));\r\n        setPriceHistory(prev => [...prev.slice(-99), parseFloat(data.c)]);\r\n      };\r\n      \r\n      setWs(websocket);\r\n      \r\n      // Fiyat geçmişini yükle\r\n      const history = await getPriceHistory();\r\n      setPriceHistory(history);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Wallet connection failed:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const placeOrder = async (side, amount, price) => {\r\n    try {\r\n      const order = {\r\n        symbol: 'DOGEUSDT',\r\n        side,\r\n        amount,\r\n        price,\r\n        leverage,\r\n        timestamp: Date.now(),\r\n        status: 'open'\r\n      };\r\n      \r\n      // API'ye gönder\r\n      await apiPlaceOrder(order);\r\n      \r\n      setOpenOrders(prev => [...prev, order]);\r\n      return order;\r\n    } catch (error) {\r\n      console.error('Order failed:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const applyAlgorithm = (algorithmName) => {\r\n    const priceData = [...priceHistory, currentPrice];\r\n    \r\n    switch(algorithmName) {\r\n      case 'meanReversion':\r\n        return meanReversion(priceData);\r\n      case 'breakout':\r\n        return breakout(priceData);\r\n      default:\r\n        return { action: 'hold', price: currentPrice };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (ws) {\r\n        ws.close();\r\n      }\r\n    };\r\n  }, [ws]);\r\n\r\n  return {\r\n    balance,\r\n    currentPrice,\r\n    priceHistory,\r\n    openOrders,\r\n    orderHistory,\r\n    connectWallet,\r\n    placeOrder,\r\n    setLeverage,\r\n    applyAlgorithm\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}