{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:5000';\nexport const getDogeUsdtPrice = async () => {\n  try {\n    const response = await axios.get('/api/price');\n    return parseFloat(response.data.price);\n  } catch (error) {\n    console.error('Error fetching DOGE price:', error);\n    return 0;\n  }\n};\nexport const getCandleData = async (interval = '1d') => {\n  try {\n    const response = await axios.get(`/api/history?interval=${interval}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching candlestick data:', error);\n    return [];\n  }\n};\nexport const getPriceHistory = async (interval = '1d', limit = 100) => {\n  try {\n    const response = await axios.get('/api/history', {\n      params: {\n        interval,\n        limit\n      }\n    });\n    return response.data.prices;\n  } catch (error) {\n    console.error('Error fetching price history:', error);\n    return [];\n  }\n};\nexport const getBalance = async (apiKey, secretKey) => {\n  try {\n    const response = await axios.post('/api/balance', {\n      apiKey,\n      secretKey\n    });\n    console.log(response.data.balance, \"repos\");\n    return response.data.balance;\n  } catch (error) {\n    console.error('Error fetching balance:', error);\n    return null;\n  }\n};\nexport const placeOrder = async order => {\n  try {\n    const response = await axios.post('/api/order', {\n      apiKey: order.apiKey,\n      secretKey: order.secretKey,\n      side: order.side,\n      amount: order.amount,\n      price: order.price\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error placing order:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","getDogeUsdtPrice","response","get","parseFloat","data","price","error","console","getCandleData","interval","getPriceHistory","limit","params","prices","getBalance","apiKey","secretKey","post","log","balance","placeOrder","order","side","amount"],"sources":["C:/Users/VESTEL/Desktop/tradebot/src/services/api.jsx"],"sourcesContent":["import axios from 'axios'; \r\n\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\n\r\n\r\n\r\nexport const getDogeUsdtPrice = async () => {\r\n  try {\r\n    const response = await axios.get('/api/price');  \r\n    return parseFloat(response.data.price);\r\n  } catch (error) {\r\n    console.error('Error fetching DOGE price:', error);\r\n    return 0;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const getCandleData = async (interval = '1d') => {\r\n  try {\r\n    const response = await axios.get(`/api/history?interval=${interval}`);\r\n     \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching candlestick data:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const getPriceHistory = async (interval = '1d', limit = 100) => {\r\n  try {\r\n    const response = await axios.get('/api/history', {\r\n      params: { interval, limit }\r\n    });\r\n    return response.data.prices;\r\n  } catch (error) {\r\n    console.error('Error fetching price history:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\nexport const getBalance = async (apiKey, secretKey) => {\r\n  try {\r\n    const response = await axios.post('/api/balance', { apiKey, secretKey });\r\n    console.log(response.data.balance,\"repos\")\r\n    return response.data.balance\r\n    \r\n  } catch (error) {\r\n    console.error('Error fetching balance:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const placeOrder = async (order) => {\r\n  try {\r\n    const response = await axios.post('/api/order', {\r\n      apiKey: order.apiKey,\r\n      secretKey: order.secretKey,\r\n      side: order.side,\r\n      amount: order.amount,\r\n      price: order.price\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error placing order:', error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAKhD,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,YAAY,CAAC;IAC9C,OAAOC,UAAU,CAACF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,CAAC;EACV;AACF,CAAC;AAID,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOC,QAAQ,GAAG,IAAI,KAAK;EACtD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,yBAAyBO,QAAQ,EAAE,CAAC;IAErE,OAAOR,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,EAAE;EACX;AACF,CAAC;AAID,OAAO,MAAMI,eAAe,GAAG,MAAAA,CAAOD,QAAQ,GAAG,IAAI,EAAEE,KAAK,GAAG,GAAG,KAAK;EACrE,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,cAAc,EAAE;MAC/CU,MAAM,EAAE;QAAEH,QAAQ;QAAEE;MAAM;IAC5B,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACG,IAAI,CAACS,MAAM;EAC7B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACX;AACF,CAAC;AAGD,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;EACrD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACoB,IAAI,CAAC,cAAc,EAAE;MAAEF,MAAM;MAAEC;IAAU,CAAC,CAAC;IACxET,OAAO,CAACW,GAAG,CAACjB,QAAQ,CAACG,IAAI,CAACe,OAAO,EAAC,OAAO,CAAC;IAC1C,OAAOlB,QAAQ,CAACG,IAAI,CAACe,OAAO;EAE9B,CAAC,CAAC,OAAOb,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMc,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMJ,KAAK,CAACoB,IAAI,CAAC,YAAY,EAAE;MAC9CF,MAAM,EAAEM,KAAK,CAACN,MAAM;MACpBC,SAAS,EAAEK,KAAK,CAACL,SAAS;MAC1BM,IAAI,EAAED,KAAK,CAACC,IAAI;MAChBC,MAAM,EAAEF,KAAK,CAACE,MAAM;MACpBlB,KAAK,EAAEgB,KAAK,CAAChB;IACf,CAAC,CAAC;IACF,OAAOJ,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}