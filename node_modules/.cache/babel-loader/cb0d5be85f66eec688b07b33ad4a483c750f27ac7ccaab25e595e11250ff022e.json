{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getBalance, getPriceHistory, placeOrder as apiPlaceOrder } from '../services/api';\nimport { meanReversion, breakout, defaultAlgorithmSettings } from '../services/tradingAlgorithms';\nexport const useMexc = () => {\n  _s();\n  // ... diğer stateler\n\n  const [algorithmSettings, setAlgorithmSettings] = useState({\n    ...defaultAlgorithmSettings,\n    selectedAlgorithm: 'meanReversion'\n  });\n\n  // ... diğer fonksiyonlar\n\n  const applyAlgorithm = () => {\n    const priceData = [...priceHistory, currentPrice];\n    const settings = algorithmSettings[algorithmSettings.selectedAlgorithm];\n    switch (algorithmSettings.selectedAlgorithm) {\n      case 'meanReversion':\n        return meanReversion(priceData, settings);\n      case 'breakout':\n        return breakout(priceData, settings);\n      default:\n        return {\n          action: 'hold',\n          price: currentPrice\n        };\n    }\n  };\n  const updateAlgorithmSettings = (algorithm, newSettings) => {\n    setAlgorithmSettings(prev => ({\n      ...prev,\n      [algorithm]: {\n        ...prev[algorithm],\n        ...newSettings\n      }\n    }));\n  };\n  return {\n    // ... diğer dönen değerler\n    algorithmSettings,\n    updateAlgorithmSettings,\n    setSelectedAlgorithm: algo => setAlgorithmSettings(prev => ({\n      ...prev,\n      selectedAlgorithm: algo\n    }))\n  };\n};\n_s(useMexc, \"jZ4GDW5XBMMqZli4xDUaudTUgdQ=\");","map":{"version":3,"names":["useState","useEffect","getBalance","getPriceHistory","placeOrder","apiPlaceOrder","meanReversion","breakout","defaultAlgorithmSettings","useMexc","_s","algorithmSettings","setAlgorithmSettings","selectedAlgorithm","applyAlgorithm","priceData","priceHistory","currentPrice","settings","action","price","updateAlgorithmSettings","algorithm","newSettings","prev","setSelectedAlgorithm","algo"],"sources":["C:/Users/VESTEL/Documents/GitHub/tradebot/src/hooks/useMexc.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { \r\n  getBalance, \r\n  getPriceHistory, \r\n  placeOrder as apiPlaceOrder \r\n} from '../services/api';\r\nimport { \r\n  meanReversion, \r\n  breakout, \r\n  defaultAlgorithmSettings \r\n} from '../services/tradingAlgorithms';\r\n\r\nexport const useMexc = () => {\r\n  // ... diğer stateler\r\n  \r\n  const [algorithmSettings, setAlgorithmSettings] = useState({\r\n    ...defaultAlgorithmSettings,\r\n    selectedAlgorithm: 'meanReversion'\r\n  });\r\n\r\n  // ... diğer fonksiyonlar\r\n\r\n  const applyAlgorithm = () => {\r\n    const priceData = [...priceHistory, currentPrice];\r\n    const settings = algorithmSettings[algorithmSettings.selectedAlgorithm];\r\n    \r\n    switch(algorithmSettings.selectedAlgorithm) {\r\n      case 'meanReversion':\r\n        return meanReversion(priceData, settings);\r\n      case 'breakout':\r\n        return breakout(priceData, settings);\r\n      default:\r\n        return { action: 'hold', price: currentPrice };\r\n    }\r\n  };\r\n\r\n  const updateAlgorithmSettings = (algorithm, newSettings) => {\r\n    setAlgorithmSettings(prev => ({\r\n      ...prev,\r\n      [algorithm]: {\r\n        ...prev[algorithm],\r\n        ...newSettings\r\n      }\r\n    }));\r\n  };\r\n\r\n  return {\r\n    // ... diğer dönen değerler\r\n    algorithmSettings,\r\n    updateAlgorithmSettings,\r\n    setSelectedAlgorithm: (algo) => setAlgorithmSettings(prev => ({\r\n      ...prev,\r\n      selectedAlgorithm: algo\r\n    }))\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,UAAU,EACVC,eAAe,EACfC,UAAU,IAAIC,aAAa,QACtB,iBAAiB;AACxB,SACEC,aAAa,EACbC,QAAQ,EACRC,wBAAwB,QACnB,+BAA+B;AAEtC,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;;EAEA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC;IACzD,GAAGQ,wBAAwB;IAC3BK,iBAAiB,EAAE;EACrB,CAAC,CAAC;;EAEF;;EAEA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,SAAS,GAAG,CAAC,GAAGC,YAAY,EAAEC,YAAY,CAAC;IACjD,MAAMC,QAAQ,GAAGP,iBAAiB,CAACA,iBAAiB,CAACE,iBAAiB,CAAC;IAEvE,QAAOF,iBAAiB,CAACE,iBAAiB;MACxC,KAAK,eAAe;QAClB,OAAOP,aAAa,CAACS,SAAS,EAAEG,QAAQ,CAAC;MAC3C,KAAK,UAAU;QACb,OAAOX,QAAQ,CAACQ,SAAS,EAAEG,QAAQ,CAAC;MACtC;QACE,OAAO;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAEH;QAAa,CAAC;IAClD;EACF,CAAC;EAED,MAAMI,uBAAuB,GAAGA,CAACC,SAAS,EAAEC,WAAW,KAAK;IAC1DX,oBAAoB,CAACY,IAAI,KAAK;MAC5B,GAAGA,IAAI;MACP,CAACF,SAAS,GAAG;QACX,GAAGE,IAAI,CAACF,SAAS,CAAC;QAClB,GAAGC;MACL;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,OAAO;IACL;IACAZ,iBAAiB;IACjBU,uBAAuB;IACvBI,oBAAoB,EAAGC,IAAI,IAAKd,oBAAoB,CAACY,IAAI,KAAK;MAC5D,GAAGA,IAAI;MACPX,iBAAiB,EAAEa;IACrB,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAAChB,EAAA,CA3CWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}