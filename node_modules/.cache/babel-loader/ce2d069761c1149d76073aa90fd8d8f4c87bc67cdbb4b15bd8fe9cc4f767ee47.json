{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VESTEL\\\\Documents\\\\GitHub\\\\tradebot\\\\src\\\\components\\\\CandleChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, TimeScale, Tooltip, Legend } from 'chart.js';\nimport { CandlestickController, CandlestickElement } from 'chartjs-chart-financial';\nimport { Chart } from 'react-chartjs-2'; // react-chartjs-2 kullanarak Chart bileşeni alınıyor\nimport 'chartjs-adapter-date-fns';\n\n// Chart.js bileşenlerini kaydediyoruz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, TimeScale, CandlestickController, CandlestickElement, Tooltip, Legend);\nexport const CandleChart = ({\n  priceData,\n  interval,\n  onIntervalChange,\n  currentPrice\n}) => {\n  _s();\n  // En son timestamp'ı almak için useMemo kullanıyoruz\n  const lastTimestamp = useMemo(() => {\n    if (priceData.length === 0) return null;\n    const lastData = priceData[priceData.length - 1];\n    return lastData.x; // timestamp değeri\n  }, [priceData]);\n  const data = {\n    datasets: [{\n      label: 'DOGE/USDT',\n      data: priceData,\n      // OHLC verisi (open, high, low, close)\n      borderColor: 'rgba(0, 0, 0, 1)',\n      // Çizgi rengini belirliyoruz\n      borderWidth: 1,\n      upColor: 'rgba(0, 255, 0, 1)',\n      // Yükselen mumlar için renk\n      downColor: 'rgba(255, 0, 0, 1)' // Düşen mumlar için renk\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: interval === '1d' ? 'day' : 'hour',\n          tooltipFormat: 'yyyy-MM-dd HH:mm' // Zaman formatı\n        },\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Price (USDT)'\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const ohlc = context.raw; // OHLC verisini alıyoruz\n            return `O: ${ohlc.o}, H: ${ohlc.h}, L: ${ohlc.l}, C: ${ohlc.c}`; // Tooltip etiketini gösteriyoruz\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10,\n        fontSize: '18px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Current Price: \", currentPrice, \" USDT\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), lastTimestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10,\n        fontSize: '16px',\n        fontWeight: 'bold'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Selected Timestamp: \", new Date(lastTimestamp).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: ['15m', '1h', '4h', '1d'].map(i => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onIntervalChange(i),\n        style: {\n          marginRight: 8\n        },\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"candlestick\",\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CandleChart, \"slRSWXk3cdXdjPan5extRsAntWg=\");\n_c = CandleChart;\nvar _c;\n$RefreshReg$(_c, \"CandleChart\");","map":{"version":3,"names":["React","useMemo","Chart","ChartJS","CategoryScale","LinearScale","TimeScale","Tooltip","Legend","CandlestickController","CandlestickElement","jsxDEV","_jsxDEV","register","CandleChart","priceData","interval","onIntervalChange","currentPrice","_s","lastTimestamp","length","lastData","x","data","datasets","label","borderColor","borderWidth","upColor","downColor","options","responsive","scales","type","time","unit","tooltipFormat","title","display","text","y","plugins","tooltip","callbacks","context","ohlc","raw","o","h","l","c","children","style","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","Date","toLocaleString","map","i","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/VESTEL/Documents/GitHub/tradebot/src/components/CandleChart.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  TimeScale,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport { CandlestickController, CandlestickElement } from 'chartjs-chart-financial'; \r\nimport { Chart } from 'react-chartjs-2'; // react-chartjs-2 kullanarak Chart bileşeni alınıyor\r\nimport 'chartjs-adapter-date-fns';\r\n\r\n// Chart.js bileşenlerini kaydediyoruz\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  TimeScale,\r\n  CandlestickController,\r\n  CandlestickElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const CandleChart = ({ priceData, interval, onIntervalChange, currentPrice }) => {\r\n  // En son timestamp'ı almak için useMemo kullanıyoruz\r\n  const lastTimestamp = useMemo(() => {\r\n    if (priceData.length === 0) return null;\r\n    const lastData = priceData[priceData.length - 1];\r\n    return lastData.x; // timestamp değeri\r\n  }, [priceData]);\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: 'DOGE/USDT',\r\n        data: priceData, // OHLC verisi (open, high, low, close)\r\n        borderColor: 'rgba(0, 0, 0, 1)', // Çizgi rengini belirliyoruz\r\n        borderWidth: 1,\r\n        upColor: 'rgba(0, 255, 0, 1)', // Yükselen mumlar için renk\r\n        downColor: 'rgba(255, 0, 0, 1)', // Düşen mumlar için renk\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        time: {\r\n          unit: interval === '1d' ? 'day' : 'hour',\r\n          tooltipFormat: 'yyyy-MM-dd HH:mm', // Zaman formatı\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Time',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Price (USDT)',\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) => {\r\n            const ohlc = context.raw; // OHLC verisini alıyoruz\r\n            return `O: ${ohlc.o}, H: ${ohlc.h}, L: ${ohlc.l}, C: ${ohlc.c}`; // Tooltip etiketini gösteriyoruz\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Current Price'ı başta gösteriyoruz */}\r\n      <div style={{ marginBottom: 10, fontSize: '18px' }}>\r\n        <strong>Current Price: {currentPrice} USDT</strong>\r\n      </div>\r\n\r\n      {/* Seçilen timestamp'ı gösteriyoruz */}\r\n      {lastTimestamp && (\r\n        <div style={{ marginBottom: 10, fontSize: '16px', fontWeight: 'bold' }}>\r\n          <strong>Selected Timestamp: {new Date(lastTimestamp).toLocaleString()}</strong>\r\n        </div>\r\n      )}\r\n      \r\n      <div style={{ marginBottom: 10 }}>\r\n        {['15m', '1h', '4h', '1d'].map((i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => onIntervalChange(i)}\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            {i}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      \r\n      {/* Chart bileşenini render ediyoruz */}\r\n      <Chart type=\"candlestick\" data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}