{"ast":null,"code":"import axios from 'axios';\nimport CryptoJS from 'crypto-js';\naxios.defaults.baseURL = 'http://localhost:5000';\nexport const getDogeUsdtPrice = async () => {\n  try {\n    const response = await axios.get('/api/price');\n    return parseFloat(response.data.price);\n  } catch (error) {\n    console.error('Error fetching DOGE price:', error);\n    return 0;\n  }\n};\nexport const getPriceHistory = async () => {\n  try {\n    const response = await axios.get('/api/history');\n    return response.data.prices;\n  } catch (error) {\n    console.error('Error fetching price history:', error);\n    return Array(100).fill(0.15);\n  }\n};\nexport const getBalance = async (apiKey, secretKey) => {\n  try {\n    const response = await axios.post('/api/balance', {\n      apiKey,\n      secretKey\n    });\n    return response.data.balance;\n  } catch (error) {\n    console.error('Error fetching balance:', error);\n    return null;\n  }\n};\nexport const placeOrder = async order => {\n  const timestamp = Date.now();\n  const queryString = `symbol=DOGEUSDT&side=${order.side}&type=LIMIT&quantity=${order.amount}&price=${order.price}&timestamp=${timestamp}`;\n  const signature = CryptoJS.HmacSHA256(queryString, order.secretKey).toString(CryptoJS.enc.Hex);\n  const response = await axios.post(`/v3/order`, `${queryString}&signature=${signature}`, {\n    headers: {\n      'X-MEXC-APIKEY': order.apiKey\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","CryptoJS","defaults","baseURL","getDogeUsdtPrice","response","get","parseFloat","data","price","error","console","getPriceHistory","prices","Array","fill","getBalance","apiKey","secretKey","post","balance","placeOrder","order","timestamp","Date","now","queryString","side","amount","signature","HmacSHA256","toString","enc","Hex","headers"],"sources":["C:/Users/VESTEL/Documents/GitHub/tradebot/src/services/api.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\n\r\n\r\n\r\nexport const getDogeUsdtPrice = async () => {\r\n  try {\r\n    const response = await axios.get('/api/price');  \r\n    return parseFloat(response.data.price);\r\n  } catch (error) {\r\n    console.error('Error fetching DOGE price:', error);\r\n    return 0;\r\n  }\r\n};\r\nexport const getPriceHistory = async () => {\r\n  try {\r\n    const response = await axios.get('/api/history');\r\n    return response.data.prices;\r\n  } catch (error) {\r\n    console.error('Error fetching price history:', error);\r\n    return Array(100).fill(0.15);\r\n  }\r\n};\r\n\r\nexport const getBalance = async (apiKey, secretKey) => {\r\n  try {\r\n    const response = await axios.post('/api/balance', { apiKey, secretKey });\r\n    return response.data.balance;\r\n  } catch (error) {\r\n    console.error('Error fetching balance:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\nexport const placeOrder = async (order) => {\r\n  const timestamp = Date.now();\r\n  const queryString = `symbol=DOGEUSDT&side=${order.side}&type=LIMIT&quantity=${order.amount}&price=${order.price}&timestamp=${timestamp}`;\r\n  const signature = CryptoJS.HmacSHA256(queryString, order.secretKey).toString(CryptoJS.enc.Hex);\r\n\r\n  const response = await axios.post(`/v3/order`, `${queryString}&signature=${signature}`, {\r\n    headers: {\r\n      'X-MEXC-APIKEY': order.apiKey\r\n    }\r\n  });\r\n\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAEhCD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAKhD,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,YAAY,CAAC;IAC9C,OAAOC,UAAU,CAACF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,CAAC;EACV;AACF,CAAC;AACD,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,cAAc,CAAC;IAChD,OAAOD,QAAQ,CAACG,IAAI,CAACK,MAAM;EAC7B,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAOI,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;EACrD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAML,KAAK,CAACmB,IAAI,CAAC,cAAc,EAAE;MAAEF,MAAM;MAAEC;IAAU,CAAC,CAAC;IACxE,OAAOb,QAAQ,CAACG,IAAI,CAACY,OAAO;EAC9B,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACb;AACF,CAAC;AAGD,OAAO,MAAMW,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAC5B,MAAMC,WAAW,GAAG,wBAAwBJ,KAAK,CAACK,IAAI,wBAAwBL,KAAK,CAACM,MAAM,UAAUN,KAAK,CAACb,KAAK,cAAcc,SAAS,EAAE;EACxI,MAAMM,SAAS,GAAG5B,QAAQ,CAAC6B,UAAU,CAACJ,WAAW,EAAEJ,KAAK,CAACJ,SAAS,CAAC,CAACa,QAAQ,CAAC9B,QAAQ,CAAC+B,GAAG,CAACC,GAAG,CAAC;EAE9F,MAAM5B,QAAQ,GAAG,MAAML,KAAK,CAACmB,IAAI,CAAC,WAAW,EAAE,GAAGO,WAAW,cAAcG,SAAS,EAAE,EAAE;IACtFK,OAAO,EAAE;MACP,eAAe,EAAEZ,KAAK,CAACL;IACzB;EACF,CAAC,CAAC;EAEF,OAAOZ,QAAQ,CAACG,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}