{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VESTEL\\\\Documents\\\\GitHub\\\\tradebot\\\\src\\\\components\\\\TradeForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { connectWallet } from \"../hooks/useBinance\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TradeForm = ({\n  currentPrice,\n  placeOrder,\n  algorithm,\n  setAlgorithm,\n  leverage,\n  setLeverageInput,\n  applyAlgorithm\n}) => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [secretKey, setSecretKey] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [algoSignal, setAlgoSignal] = useState(null);\n  const handleConnect = async () => {\n    const connected = await connectWallet(apiKey, secretKey);\n    setIsConnected(connected);\n  };\n  const handleAlgorithmCheck = () => {\n    const signal = applyAlgorithm(algorithm);\n    setAlgoSignal(signal);\n  };\n  const executeAlgorithmTrade = () => {\n    if (!algoSignal || algoSignal.action === 'hold') return;\n    placeOrder(algoSignal.action.toUpperCase(), amount || '10',\n    // Varsayılan miktar\n    algoSignal.price);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Trading Controls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-connect\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"API Key\",\n        value: apiKey,\n        onChange: e => setApiKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Secret Key\",\n        value: secretKey,\n        onChange: e => setSecretKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manual-trade\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount (USDT)\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trade-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => placeOrder('BUY', amount, currentPrice),\n            children: \"BUY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => placeOrder('SELL', amount, currentPrice),\n            children: \"SELL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leverage-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Leverage: \", leverage, \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"20\",\n          value: leverage,\n          onChange: e => setLeverageInput(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"algorithm-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: algorithm,\n          onChange: e => setAlgorithm(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"meanReversion\",\n            children: \"Mean Reversion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"breakout\",\n            children: \"Breakout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAlgorithmCheck,\n          children: \"Check Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), algoSignal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `algo-signal ${algoSignal.action}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Algorithm suggests: \", algoSignal.action.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"At price: \", algoSignal.price.toFixed(8)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: executeAlgorithmTrade,\n            children: \"Execute Trade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TradeForm, \"uOPuVLpExlR92O8eekuumnsEBLU=\");\n_c = TradeForm;\nvar _c;\n$RefreshReg$(_c, \"TradeForm\");","map":{"version":3,"names":["React","useState","connectWallet","jsxDEV","_jsxDEV","Fragment","_Fragment","TradeForm","currentPrice","placeOrder","algorithm","setAlgorithm","leverage","setLeverageInput","applyAlgorithm","_s","amount","setAmount","apiKey","setApiKey","secretKey","setSecretKey","isConnected","setIsConnected","algoSignal","setAlgoSignal","handleConnect","connected","handleAlgorithmCheck","signal","executeAlgorithmTrade","action","toUpperCase","price","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","step","min","max","parseInt","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/VESTEL/Documents/GitHub/tradebot/src/components/TradeForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {connectWallet} from \"../hooks/useBinance\"\r\n\r\nexport const TradeForm = ({ \r\n  currentPrice, \r\n  placeOrder, \r\n  algorithm, \r\n  setAlgorithm, \r\n  leverage, \r\n  setLeverageInput,\r\n  applyAlgorithm\r\n}) => {\r\n  const [amount, setAmount] = useState('');\r\n  const [apiKey, setApiKey] = useState('');\r\n  const [secretKey, setSecretKey] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [algoSignal, setAlgoSignal] = useState(null);\r\n\r\n  const handleConnect = async () => {\r\n    const connected = await connectWallet(apiKey, secretKey);\r\n    setIsConnected(connected);\r\n  };\r\n\r\n  const handleAlgorithmCheck = () => {\r\n    const signal = applyAlgorithm(algorithm);\r\n    setAlgoSignal(signal);\r\n  };\r\n\r\n  const executeAlgorithmTrade = () => {\r\n    if (!algoSignal || algoSignal.action === 'hold') return;\r\n    \r\n    placeOrder(\r\n      algoSignal.action.toUpperCase(),\r\n      amount || '10', // Varsayılan miktar\r\n      algoSignal.price\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"trade-form\">\r\n      <h3>Trading Controls</h3>\r\n      \r\n      {!isConnected ? (\r\n        <div className=\"wallet-connect\">\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"API Key\" \r\n            value={apiKey} \r\n            onChange={(e) => setApiKey(e.target.value)} \r\n          />\r\n          <input \r\n            type=\"password\" \r\n            placeholder=\"Secret Key\" \r\n            value={secretKey} \r\n            onChange={(e) => setSecretKey(e.target.value)} \r\n          />\r\n          <button onClick={handleConnect}>Connect Wallet</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"manual-trade\">\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Amount (USDT)\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              step=\"0.01\"\r\n            />\r\n            <div className=\"trade-buttons\">\r\n              <button onClick={() => placeOrder('BUY', amount, currentPrice)}>BUY</button>\r\n              <button onClick={() => placeOrder('SELL', amount, currentPrice)}>SELL</button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"leverage-control\">\r\n            <label>Leverage: {leverage}x</label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"20\"\r\n              value={leverage}\r\n              onChange={(e) => setLeverageInput(parseInt(e.target.value))}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"algorithm-control\">\r\n            <select value={algorithm} onChange={(e) => setAlgorithm(e.target.value)}>\r\n              <option value=\"meanReversion\">Mean Reversion</option>\r\n              <option value=\"breakout\">Breakout</option>\r\n            </select>\r\n            <button onClick={handleAlgorithmCheck}>Check Algorithm</button>\r\n            \r\n            {algoSignal && (\r\n              <div className={`algo-signal ${algoSignal.action}`}>\r\n                <p>Algorithm suggests: {algoSignal.action.toUpperCase()}</p>\r\n                <p>At price: {algoSignal.price.toFixed(8)}</p>\r\n                <button onClick={executeAlgorithmTrade}>Execute Trade</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}